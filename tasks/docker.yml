---
# install packages to allow apt to use a repository over HTTPS:
- name: Install docker packages
  become: true
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present

# curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
- name: Add Docker s official GPG key
  become: true
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present

# apt-key fingerprint
- name: Verify that we have the key with the fingerprint
  become: true
  apt_key:
    id: 0EBFCD88
    state: present

# add-apt-repository
- name: Set up the stable repository
  become: true
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
    state: present
    update_cache: yes

# apt-get update
- name: Update apt packages
  become: true
  apt:
    update_cache: yes

# install docker-ce latetst verion
- name: Install docker
  become: true
  apt:
    name: docker-ce
    state: present
    update_cache: yes

# sudo groupadd docker
- name: Create "docker" group
  become: true
  group:
   name: docker
   state: present

# sudo usermod -aG docker $USER
- name: "docker: Add user to docker group"
  become: true
  ansible.builtin.user:
    name: tmoore
    groups: docker
    append: true

# install docker-compose 1.24.0 version, but you can specify the version you need & apply executable permissions to the binary
- name: install docker-compose
  become: true
  get_url:
    url: https://github.com/docker/compose/releases/download/1.24.0/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}
    dest: /usr/local/bin/docker-compose
    mode: 'u+x,g+x'

# you can also create a symbolic link to /usr/bin or any other directory in your path
- name: Create symlink
  become: true
  file: src=/usr/local/bin/docker-compose dest=/usr/bin/docker-compose state=link
